# Use a simpler approach that definitely works
FROM rust:bookworm AS builder

# Install build dependencies
RUN apt-get update && apt-get install -y libasound2-dev

# Set working directory
WORKDIR /app

# Copy everything first
COPY . .

# List what we have (debug)
RUN ls -la
RUN ls -la static/ || echo "No static dir"

# Build the application
RUN cargo build --release --no-default-features --features "vad_webrtc" --bin rustpbx

# Runtime stage
FROM debian:bookworm-slim

# Install runtime dependencies
RUN apt-get update && apt-get install -y ca-certificates tzdata curl && rm -rf /var/lib/apt/lists/*

# Set environment
ENV RUST_LOG=info

# Create app directory
WORKDIR /app

# Copy the binary
COPY --from=builder /app/target/release/rustpbx /app/rustpbx

# Copy config
COPY --from=builder /app/config.docker.toml /app/config.toml

# Copy static files (explicit copy)
COPY --from=builder /app/static /app/static

# Verify static files
RUN ls -la /app/
RUN ls -la /app/static/

# Create directories
RUN mkdir -p /tmp/recorders /tmp/mediacache /tmp/cdr

# Expose port
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD curl -f http://localhost:8080/ || exit 1

# Start
CMD ["/app/rustpbx", "--conf", "/app/config.toml"]
